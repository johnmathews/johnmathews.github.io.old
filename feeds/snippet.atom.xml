<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>John Mathews - snippet</title><link href="https://johnmathews.eu/" rel="alternate"/><link href="https://johnmathews.eu/feeds/snippet.atom.xml" rel="self"/><id>https://johnmathews.eu/</id><updated>2021-04-25T22:39:05+02:00</updated><entry><title>where command</title><link href="https://johnmathews.eu/where-command.html" rel="alternate"/><published>2021-04-25T22:39:05+02:00</published><updated>2021-04-25T22:39:05+02:00</updated><author><name>John Mathews</name></author><id>tag:johnmathews.eu,2021-04-25:/where-command.html</id><summary type="html"/><content type="html">&lt;p&gt;&lt;code&gt;where &lt;command/&gt;&lt;/code&gt; - shows all known locations of &lt;command/&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;man where&lt;/code&gt; - show all builtin commands.&lt;/p&gt;</content><category term="snippet"/><category term="unix"/><category term="macOS"/><category term="cli"/><category term="bash"/></entry><entry><title>alias to real</title><link href="https://johnmathews.eu/alias-real.html" rel="alternate"/><published>2021-04-20T22:40:09+02:00</published><updated>2021-04-20T22:40:09+02:00</updated><author><name>John Mathews</name></author><id>tag:johnmathews.eu,2021-04-20:/alias-real.html</id><summary type="html"/><content type="html">&lt;p&gt;make aliased files the real file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt; f in &lt;span class="k"&gt;$(&lt;/span&gt;find . -type l -maxdepth &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;do&lt;/span&gt; cp --remove-destination &lt;span class="k"&gt;$(&lt;/span&gt;readlink &lt;span class="nv"&gt;$f&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;$f&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;done&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</content><category term="snippet"/><category term="macos"/><category term="linux"/><category term="cli"/><category term="bash"/></entry><entry><title>tmux-window-reorg</title><link href="https://johnmathews.eu/tmux-window-reorg.html" rel="alternate"/><published>2021-04-19T22:42:42+02:00</published><updated>2021-04-19T22:42:42+02:00</updated><author><name>John Mathews</name></author><id>tag:johnmathews.eu,2021-04-19:/tmux-window-reorg.html</id><summary type="html"/><content type="html">&lt;p&gt;tmux reorganize windows:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;swap-window -s 3 -t 1&lt;/code&gt;&lt;/p&gt;</content><category term="snippet"/><category term="tmux"/><category term="macos"/><category term="linux"/><category term="cli"/></entry><entry><title>vim save sudo</title><link href="https://johnmathews.eu/vim-save-sudo.html" rel="alternate"/><published>2021-04-17T22:44:10+02:00</published><updated>2021-04-17T22:44:10+02:00</updated><author><name>John Mathews</name></author><id>tag:johnmathews.eu,2021-04-17:/vim-save-sudo.html</id><summary type="html"/><content type="html">&lt;p&gt;vim save a file with sudo when you opened it without sudo-ing:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;:w !sudo tee %&lt;/code&gt;&lt;/p&gt;</content><category term="snippet"/><category term="vim"/><category term="macos"/><category term="linux"/></entry><entry><title>climbing higher</title><link href="https://johnmathews.eu/climbing-higher.html" rel="alternate"/><published>2021-04-16T22:45:44+02:00</published><updated>2021-04-16T22:45:44+02:00</updated><author><name>John Mathews</name></author><id>tag:johnmathews.eu,2021-04-16:/climbing-higher.html</id><summary type="html"/><content type="html">&lt;p&gt;The trouble with climbing higher is that eventually you lose sight of the ground.&lt;/p&gt;</content><category term="snippet"/><category term="advice"/><category term="thoughts"/><category term="meta"/></entry><entry><title>broot</title><link href="https://johnmathews.eu/broot.html" rel="alternate"/><published>2021-04-13T22:49:26+02:00</published><updated>2021-04-13T22:49:26+02:00</updated><author><name>John Mathews</name></author><id>tag:johnmathews.eu,2021-04-13:/broot.html</id><summary type="html"/><content type="html">&lt;p&gt;&lt;a href="https://dystroy.org/broot/"&gt;broot&lt;/a&gt; - I’d forgotten the name and tried to re-find it by googling, without success.&lt;/p&gt;</content><category term="snippet"/><category term="broot"/><category term="macos"/><category term="cli"/></entry><entry><title>adding keyboard navigation</title><link href="https://johnmathews.eu/adding-keyboard-navigation.html" rel="alternate"/><published>2021-04-12T22:50:48+02:00</published><updated>2021-04-12T22:50:48+02:00</updated><author><name>John Mathews</name></author><id>tag:johnmathews.eu,2021-04-12:/adding-keyboard-navigation.html</id><summary type="html"/><content type="html">&lt;p&gt;I added keyboard navigation to my blog and it works really well. Now I find
myself trying to use the same shortcuts on other sites. &lt;/p&gt;</content><category term="snippet"/><category term="blog"/><category term="jam-stack"/><category term="jquery"/></entry><entry><title>github actions blog</title><link href="https://johnmathews.eu/github-actions-blog.html" rel="alternate"/><published>2021-04-10T22:53:39+02:00</published><updated>2021-04-10T22:53:39+02:00</updated><author><name>John Mathews</name></author><id>tag:johnmathews.eu,2021-04-10:/github-actions-blog.html</id><summary type="html"/><content type="html">&lt;p&gt;I should see if I can use GitHub actions to generate html from markdown and run
some shell and python scripts.&lt;/p&gt;</content><category term="snippet"/><category term="github"/><category term="blog"/></entry><entry><title>socially acceptable mistakes</title><link href="https://johnmathews.eu/socially-acceptable-mistakes.html" rel="alternate"/><published>2021-04-10T22:52:26+02:00</published><updated>2021-04-10T22:52:26+02:00</updated><author><name>John Mathews</name></author><id>tag:johnmathews.eu,2021-04-10:/socially-acceptable-mistakes.html</id><summary type="html"/><content type="html">&lt;p&gt;Its more socially acceptable to make mistakes and errors of omission than commission.&lt;/p&gt;</content><category term="snippet"/><category term="meta"/><category term="thinking"/><category term="advice"/></entry><entry><title>du command</title><link href="https://johnmathews.eu/du-command.html" rel="alternate"/><published>2021-04-07T22:55:19+02:00</published><updated>2021-04-07T22:55:19+02:00</updated><author><name>John Mathews</name></author><id>tag:johnmathews.eu,2021-04-07:/du-command.html</id><summary type="html"/><content type="html">&lt;p&gt;&lt;code&gt;du&lt;/code&gt; is a tool for showing disk usage.
There is a similar tool, with a list of other similar tools at https://dev.yorhel.nl/ncdu`&lt;/p&gt;</content><category term="snippet"/><category term="cli"/><category term="unix"/><category term="macos"/></entry><entry><title>safe bash scripting</title><link href="https://johnmathews.eu/safe-bash-scripting.html" rel="alternate"/><published>2021-04-06T22:56:14+02:00</published><updated>2021-04-06T22:56:14+02:00</updated><author><name>John Mathews</name></author><id>tag:johnmathews.eu,2021-04-06:/safe-bash-scripting.html</id><summary type="html"/><content type="html">&lt;p&gt;safe, good, better bash shell script
&lt;a href="https://t.co/MRxnbHgryD?amp=1"&gt;here&lt;/a&gt;&lt;/p&gt;</content><category term="snippet"/><category term="bash"/></entry><entry><title>running a binary in debian</title><link href="https://johnmathews.eu/running-a-binary-in-debian.html" rel="alternate"/><published>2021-04-05T22:58:02+02:00</published><updated>2021-04-05T22:58:02+02:00</updated><author><name>John Mathews</name></author><id>tag:johnmathews.eu,2021-04-05:/running-a-binary-in-debian.html</id><summary type="html"/><content type="html">&lt;p&gt;Was running a binary in debian that was complaining about an environment
variable not existing. I moved the binary into a &lt;span class="caps"&gt;PATH&lt;/span&gt; dir and logged in as a
&lt;span class="caps"&gt;SU&lt;/span&gt;. problem solved. why? &lt;/p&gt;</content><category term="snippet"/><category term="debian"/><category term="binary"/><category term="path"/></entry><entry><title>creating slowly</title><link href="https://johnmathews.eu/creating-slowly.html" rel="alternate"/><published>2021-04-01T23:02:09+02:00</published><updated>2021-04-01T23:02:09+02:00</updated><author><name>John Mathews</name></author><id>tag:johnmathews.eu,2021-04-01:/creating-slowly.html</id><summary type="html"/><content type="html">&lt;p&gt;As a hacker, or creator, or whatever the best label is, I always want to create
something (usually code) and have it finished.&lt;/p&gt;
&lt;p&gt;But a strange creativity and productivity boost comes from dabbling, dipping in
and out.&lt;/p&gt;
&lt;p&gt;I think that if the technical challenges aren’t too hard, then the main
criteria for success is creativity.&lt;/p&gt;
&lt;p&gt;Creativity needs time away from the project, and sleep, to bubble up and let
ideas grow.&lt;/p&gt;
&lt;p&gt;Ultimately, the most successful path is usually the most interesting, because
success has more consequences than failure. “Interesting” requires elements of
novelty and surprise, and without creativity these elements can’t flourish. 3/n&lt;/p&gt;
&lt;p&gt;Dabbling results in more creativity than 6+ hours of strenuous work, and is
more likely to give you satisfying results.&lt;/p&gt;</content><category term="snippet"/><category term="meta"/><category term="thinking"/><category term="advice"/></entry><entry><title>arrow syntax in bash</title><link href="https://johnmathews.eu/arrow-syntax-in-bash.html" rel="alternate"/><published>2021-04-01T22:59:00+02:00</published><updated>2021-04-01T22:59:00+02:00</updated><author><name>John Mathews</name></author><id>tag:johnmathews.eu,2021-04-01:/arrow-syntax-in-bash.html</id><summary type="html"/><content type="html">&lt;p&gt;&lt;code&gt;bar &amp;lt;&amp;lt; foo&lt;/code&gt; bar will stop reading input when it reached “foo” (here-document)&lt;/p&gt;
&lt;p&gt;&lt;code&gt;bar &amp;lt;&amp;lt;&amp;lt; "foo"&lt;/code&gt; foo is all the input. bar wont run interactively. (here-string)&lt;/p&gt;
&lt;p&gt;&lt;code&gt;bar &amp;lt; &amp;lt;(foo:list)&lt;/code&gt; process subscription. kind of like piping in the output of multiple commands&lt;/p&gt;</content><category term="snippet"/><category term="bash"/><category term="syntax"/></entry><entry><title>pretty print json in typescript</title><link href="https://johnmathews.eu/pretty-print-json-in-typescript.html" rel="alternate"/><published>2021-03-31T23:04:25+02:00</published><updated>2021-03-31T23:04:25+02:00</updated><author><name>John Mathews</name></author><id>tag:johnmathews.eu,2021-03-31:/pretty-print-json-in-typescript.html</id><summary type="html"/><content type="html">&lt;p&gt;typescript: pretty print json stuff:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;http://console.info(`foo: &lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;JSON&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stringify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;`);
&lt;/pre&gt;&lt;/div&gt;</content><category term="snippet"/><category term="typescript"/><category term="json"/><category term="syntax"/></entry><entry><title>useful business</title><link href="https://johnmathews.eu/useful-business.html" rel="alternate"/><published>2021-03-30T23:07:07+02:00</published><updated>2021-03-30T23:07:07+02:00</updated><author><name>John Mathews</name></author><id>tag:johnmathews.eu,2021-03-30:/useful-business.html</id><summary type="html"/><content type="html">&lt;p&gt;analystsnow.com/# looks like a really useful business&lt;/p&gt;</content><category term="snippet"/><category term="entrepreneur"/><category term="saas"/></entry><entry><title>frantic distraction</title><link href="https://johnmathews.eu/frantic-distraction.html" rel="alternate"/><published>2021-03-30T23:05:59+02:00</published><updated>2021-03-30T23:05:59+02:00</updated><author><name>John Mathews</name></author><id>tag:johnmathews.eu,2021-03-30:/frantic-distraction.html</id><summary type="html"/><content type="html">&lt;p&gt;frantic distraction via productive procrastination is exhausting, and useful.&lt;/p&gt;</content><category term="snippet"/><category term="meta"/><category term="thinking"/></entry><entry><title>vim split rearranging</title><link href="https://johnmathews.eu/vim-split-rearranging.html" rel="alternate"/><published>2021-03-29T23:09:27+02:00</published><updated>2021-03-29T23:09:27+02:00</updated><author><name>John Mathews</name></author><id>tag:johnmathews.eu,2021-03-29:/vim-split-rearranging.html</id><summary type="html"/><content type="html">&lt;p&gt;Vim  split rearranging:&lt;/p&gt;
&lt;p&gt;&lt;c-w&gt;x swap buffers, but keep arrangement the same
&lt;c-w&gt;H (capital H) - make the current split cover the left of the screen. (J,
K, L covers the bottom, top, right of the screen) &lt;/c-w&gt;&lt;/c-w&gt;&lt;/p&gt;</content><category term="snippet"/><category term="vim"/></entry><entry><title>pelican plugin guide</title><link href="https://johnmathews.eu/pelican-plugin-guide.html" rel="alternate"/><published>2021-03-29T23:07:52+02:00</published><updated>2021-03-29T23:07:52+02:00</updated><author><name>John Mathews</name></author><id>tag:johnmathews.eu,2021-03-29:/pelican-plugin-guide.html</id><summary type="html"/><content type="html">&lt;p&gt;Here is a guide about writing plugins for Pelican, a static site generator written in Python.&lt;/p&gt;
&lt;p&gt;https://blog.geographer.fr/pelican-plugins&lt;/p&gt;
&lt;p&gt;Thanks @geographeur&lt;/p&gt;</content><category term="snippet"/><category term="pelican"/><category term="plugin"/><category term="guide"/></entry><entry><title>read and write same file</title><link href="https://johnmathews.eu/read-and-write-same-file.html" rel="alternate"/><published>2021-03-24T23:11:55+01:00</published><updated>2021-03-24T23:11:55+01:00</updated><author><name>John Mathews</name></author><id>tag:johnmathews.eu,2021-03-24:/read-and-write-same-file.html</id><summary type="html"/><content type="html">&lt;p&gt;Tried to read and write the same file in a pipeline, and got caught out by a race condition (why is the file empty?!). Do this instead:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;some_script &amp;lt; file &amp;gt; smscrpt.&lt;span class="nv"&gt;$$&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; mv smscrpt.&lt;span class="nv"&gt;$$&lt;/span&gt; file &lt;span class="o"&gt;||&lt;/span&gt; rm smscrpt.&lt;span class="nv"&gt;$$&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;the last part removes the temporary file if it errors&lt;/p&gt;</content><category term="snippet"/><category term="shell"/><category term="pipe"/><category term="syntax"/><category term="bash"/></entry><entry><title>json tools</title><link href="https://johnmathews.eu/json-tools.html" rel="alternate"/><published>2021-03-24T23:10:45+01:00</published><updated>2021-03-24T23:10:45+01:00</updated><author><name>John Mathews</name></author><id>tag:johnmathews.eu,2021-03-24:/json-tools.html</id><summary type="html"/><content type="html">&lt;p&gt;json tools:&lt;/p&gt;
&lt;p&gt;jj - json stream editor https://github.com/tidwall/jj
jq - json processor 
python -m json.tool &lt;/p&gt;
&lt;p&gt;I like jq for pretty printing json output, jj for making json pretty or condensed&lt;/p&gt;</content><category term="snippet"/><category term="json"/></entry><entry><title>docker commands</title><link href="https://johnmathews.eu/docker-commands.html" rel="alternate"/><published>2021-03-17T23:14:43+01:00</published><updated>2021-03-17T23:14:43+01:00</updated><author><name>John Mathews</name></author><id>tag:johnmathews.eu,2021-03-17:/docker-commands.html</id><summary type="html"/><content type="html">&lt;p&gt;docker containers - foreground, background, attach, logs:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;docker run -d ... 
docker logs -f &lt;id&gt;
docker run -it ...
docker run -itd 
docker container attach &lt;id&gt;
&lt;c-p&gt;&lt;c-q&gt; -&amp;gt; detach from container interactively
&lt;/c-q&gt;&lt;/c-p&gt;&lt;/id&gt;&lt;/id&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;https://stackoverflow.com/questions/34029680/docker-detached-mode&lt;/p&gt;</content><category term="snippet"/><category term="docker"/></entry><entry><title>pipe a script files into bash</title><link href="https://johnmathews.eu/pipe-a-script-files-into-bash.html" rel="alternate"/><published>2021-03-11T23:16:13+01:00</published><updated>2021-03-11T23:16:13+01:00</updated><author><name>John Mathews</name></author><id>tag:johnmathews.eu,2021-03-11:/pipe-a-script-files-into-bash.html</id><summary type="html"/><content type="html">&lt;p&gt;&lt;code&gt;sh -s&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Pipe a script file into bash, probably one you just &lt;code&gt;curl&lt;/code&gt;-ed&lt;/p&gt;
&lt;p&gt;e.g:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;curl -sSfL https://example.com/install.sh &lt;span class="p"&gt;|&lt;/span&gt; sh -s
&lt;/pre&gt;&lt;/div&gt;</content><category term="snippet"/><category term="bash"/><category term="syntax"/><category term="shell"/></entry><entry><title>split long output onto multiple lines</title><link href="https://johnmathews.eu/split-long-output-onto-multiple-lines.html" rel="alternate"/><published>2021-03-10T23:19:12+01:00</published><updated>2021-03-10T23:19:12+01:00</updated><author><name>John Mathews</name></author><id>tag:johnmathews.eu,2021-03-10:/split-long-output-onto-multiple-lines.html</id><summary type="html"/><content type="html">&lt;p&gt;Split long output onto multiple lines (find and replace on output)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;tr&lt;/span&gt; &lt;span class="s1"&gt;':'&lt;/span&gt; &lt;span class="s1"&gt;'\n'&lt;/span&gt;

&lt;span class="p"&gt;...&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;sed&lt;/span&gt; &lt;span class="s1"&gt;'s/:/\n/g'&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</content><category term="snippet"/><category term="bash"/><category term="linux"/></entry><entry><title>ripgrep regret</title><link href="https://johnmathews.eu/ripgrep-regret.html" rel="alternate"/><published>2021-03-10T23:18:09+01:00</published><updated>2021-03-10T23:18:09+01:00</updated><author><name>John Mathews</name></author><id>tag:johnmathews.eu,2021-03-10:/ripgrep-regret.html</id><summary type="html"/><content type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Without noticing, create a .gitignore file with a single * in it.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Spend a day trying to understand why ripgrep has stopped working for only 1 project.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;sad face.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="snippet"/><category term="ripgrep"/><category term="fail"/></entry><entry><title>teaching kids about money</title><link href="https://johnmathews.eu/teaching-kids-about-money.html" rel="alternate"/><published>2021-03-05T23:23:46+01:00</published><updated>2021-03-05T23:23:46+01:00</updated><author><name>John Mathews</name></author><id>tag:johnmathews.eu,2021-03-05:/teaching-kids-about-money.html</id><summary type="html"/><content type="html">&lt;p&gt;Teaching my kids about money and work is having an effect. &lt;/p&gt;
&lt;p&gt;Yesterday, my daughter made a painting for me and asked my to buy it using
pretend money.&lt;/p&gt;</content><category term="snippet"/><category term="parenting"/><category term="kids"/><category term="money"/><category term="teaching"/></entry><entry><title>stop prepending sudo to docker commands</title><link href="https://johnmathews.eu/stop-prepending-sudo-to-docker-commands.html" rel="alternate"/><published>2021-03-05T23:22:58+01:00</published><updated>2021-03-05T23:22:58+01:00</updated><author><name>John Mathews</name></author><id>tag:johnmathews.eu,2021-03-05:/stop-prepending-sudo-to-docker-commands.html</id><summary type="html"/><content type="html">&lt;p&gt;Stop prepending docker commands with sudo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo groupadd docker -&amp;gt; make the group 
sudo gpasswd -a &lt;span class="nv"&gt;$USER&lt;/span&gt; docker -&amp;gt; add &lt;span class="nv"&gt;$USER&lt;/span&gt; to the docker group
newgrp docker -&amp;gt; activate the changes
&lt;/pre&gt;&lt;/div&gt;</content><category term="snippet"/><category term="sudo"/><category term="docker"/><category term="linux"/></entry><entry><title>cat and a new line</title><link href="https://johnmathews.eu/cat-and-a-new-line.html" rel="alternate"/><published>2021-03-05T23:21:43+01:00</published><updated>2021-03-05T23:21:43+01:00</updated><author><name>John Mathews</name></author><id>tag:johnmathews.eu,2021-03-05:/cat-and-a-new-line.html</id><summary type="html"/><content type="html">&lt;p&gt;If you’re &lt;code&gt;cat&lt;/code&gt;-ing a file and the bash prompt doesn’t start on a new line (cos
the file you displayed using cat doesn’t end with a new line char) the
following will fix it:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;cat &lt;filename&gt; ; echo&lt;/filename&gt;&lt;/code&gt;&lt;/p&gt;</content><category term="snippet"/><category term="cat"/><category term="linux"/><category term="bash"/><category term="shell"/></entry><entry><title>creating users with sudo permissions</title><link href="https://johnmathews.eu/creating-users-with-sudo-permissions.html" rel="alternate"/><published>2021-03-04T23:25:50+01:00</published><updated>2021-03-04T23:25:50+01:00</updated><author><name>John Mathews</name></author><id>tag:johnmathews.eu,2021-03-04:/creating-users-with-sudo-permissions.html</id><summary type="html"/><content type="html">&lt;p&gt;Creating users with sudo permissions:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;adduser -m &lt;username&gt;
usermod -aG sudo &lt;username&gt;
&lt;/username&gt;&lt;/username&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;CentOS:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;adduser -m &lt;username&gt;
passwd &lt;username&gt;
usermod -aG wheel &lt;username&gt;
&lt;/username&gt;&lt;/username&gt;&lt;/username&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;(wheel is a usergroup with sudo permissions)&lt;/p&gt;</content><category term="snippet"/><category term="sudo"/><category term="linux"/><category term="user"/><category term="admin"/></entry><entry><title>disk full and usage commands</title><link href="https://johnmathews.eu/disk-full-and-usage-commands.html" rel="alternate"/><published>2021-03-03T23:27:11+01:00</published><updated>2021-03-03T23:27:11+01:00</updated><author><name>John Mathews</name></author><id>tag:johnmathews.eu,2021-03-03:/disk-full-and-usage-commands.html</id><summary type="html"/><content type="html">&lt;p&gt;&lt;code&gt;df -h&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Show disk space&lt;/p&gt;
&lt;p&gt;&lt;code&gt;du -hs .&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;See how big the current dir is&lt;/p&gt;</content><category term="snippet"/><category term="linux"/><category term="du"/><category term="df"/><category term="shell"/><category term="cli"/></entry><entry><title>cloning git repos using lfs</title><link href="https://johnmathews.eu/cloning-git-repos-using-lfs.html" rel="alternate"/><published>2021-03-03T23:24:35+01:00</published><updated>2021-03-03T23:24:35+01:00</updated><author><name>John Mathews</name></author><id>tag:johnmathews.eu,2021-03-03:/cloning-git-repos-using-lfs.html</id><summary type="html"/><content type="html">&lt;p&gt;Cloning large repos, or repos with large files in them, doesn’t work with &lt;code&gt;git
clone ...&lt;/code&gt; you need to use &lt;code&gt;git lfs clone ...&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;So why is &lt;code&gt;git lfs clone&lt;/code&gt; deprecated? What’s the replacement? &lt;/p&gt;</content><category term="snippet"/><category term="git"/><category term="git-lfs"/></entry><entry><title>nohup</title><link href="https://johnmathews.eu/nohup.html" rel="alternate"/><published>2021-03-02T23:30:02+01:00</published><updated>2021-03-02T23:30:02+01:00</updated><author><name>John Mathews</name></author><id>tag:johnmathews.eu,2021-03-02:/nohup.html</id><summary type="html"/><content type="html">&lt;p&gt;Use &lt;code&gt;nohup&lt;/code&gt; to keep a curl process running even when the terminal (tty?) session autocloses at 3am.&lt;/p&gt;</content><category term="snippet"/><category term="linux"/><category term="cli"/></entry><entry><title>shell comparisons</title><link href="https://johnmathews.eu/shell-comparisons.html" rel="alternate"/><published>2021-03-02T23:28:35+01:00</published><updated>2021-03-02T23:28:35+01:00</updated><author><name>John Mathews</name></author><id>tag:johnmathews.eu,2021-03-02:/shell-comparisons.html</id><summary type="html"/><content type="html">&lt;p&gt;zsh isn’t a superset of bash.&lt;/p&gt;
&lt;p&gt;bash is a superset of the bourne shell.&lt;/p&gt;
&lt;p&gt;You can group shells into groups:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;ksh - korn shell and zshell&lt;/li&gt;
&lt;li&gt;sh - bourne shell and bash (the bourne again shell)&lt;/li&gt;
&lt;/ol&gt;</content><category term="snippet"/><category term="zsh"/><category term="bash"/><category term="bsh"/><category term="linux"/><category term="cli"/></entry><entry><title>emacs dreaming</title><link href="https://johnmathews.eu/emacs-dreaming.html" rel="alternate"/><published>2020-11-27T23:31:01+01:00</published><updated>2020-11-27T23:31:01+01:00</updated><author><name>John Mathews</name></author><id>tag:johnmathews.eu,2020-11-27:/emacs-dreaming.html</id><summary type="html"/><content type="html">&lt;p&gt;Two nights ago, I dreamed I was experimenting with Emacs..&lt;/p&gt;</content><category term="snippet"/><category term="emacs"/><category term="dream"/></entry></feed>