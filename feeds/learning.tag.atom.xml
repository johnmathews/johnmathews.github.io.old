<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>blog - learning</title><link href="/" rel="alternate"></link><link href="feeds/learning.tag.atom.xml" rel="self"></link><id>/</id><updated>2020-12-01T13:51:00+01:00</updated><entry><title>How I learnt toÂ code</title><link href="How-I-learnt-to-code.html" rel="alternate"></link><published>2020-12-01T13:51:00+01:00</published><updated>2020-12-01T13:51:00+01:00</updated><author><name>John Mathews</name></author><id>tag:None,2020-12-01:How-I-learnt-to-code.html</id><summary type="html"></summary><content type="html">&lt;p&gt;4 years ago I started learning how to code, and it was &lt;em&gt;really&lt;/em&gt; difficult! It&amp;#8217;s still difficult, but I now have a collection of tools and perspectives that make it less daunting (more on that below). Leveling up requires one more
abstraction to wrap my head around, or one more &lt;span class="caps"&gt;API&lt;/span&gt; to understand. I can do&amp;nbsp;it. &lt;/p&gt;
&lt;p&gt;But I don&amp;#8217;t think it needed to be so difficult, so now I&amp;#8217;m building &lt;a href="https://codeschoolmeta.com"&gt;Code School Meta&lt;/a&gt; to make it easier to learn how to&amp;nbsp;code. &lt;/p&gt;
&lt;p&gt;Learning to code has been fun, ultimately successful, and life changing (hello job security!) but at the beginning it was sooo slow, and super&amp;nbsp;tricky.&lt;/p&gt;
&lt;p&gt;I remember feeling like an imposter, and thinking that I was definitely not a real developer - I hadn&amp;#8217;t taken any classes in computer science. I felt like I knew almost nothing about&amp;nbsp;anything. &lt;/p&gt;
&lt;p&gt;The process began with Pandas, a (&lt;em&gt;the&lt;/em&gt;) Python analytics library. Spreadsheets were slowing me down at work, and I was bored. I found this &lt;a href="https://youtu.be/5JnMutdy6Fw"&gt;great tutorial&lt;/a&gt; by Brandon Rhodes. From there I found out about Jupyter Notebooks, and then I found about Github pages and how to make a blog using &lt;a href="https://blog.getpelican.com/"&gt;pelican&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;That led to &lt;span class="caps"&gt;HTML&lt;/span&gt; and &lt;span class="caps"&gt;CSS&lt;/span&gt; (and also JavaScript, which I tried very hard to avoid for as long as possible). I felt like a monkey bashing a keyboard as I tried to make &lt;span class="caps"&gt;HTML&lt;/span&gt; elements do what I&amp;nbsp;wanted.&lt;/p&gt;
&lt;p&gt;Git was next, but I found this &lt;a href="https://blog.johnmathews.eu/rys-git-tutorial.html"&gt;amazing tutorial&lt;/a&gt; to help me learn. It made Git seem &lt;span class="caps"&gt;OK&lt;/span&gt;, and also helped &lt;span class="caps"&gt;HTML&lt;/span&gt; and &lt;span class="caps"&gt;CSS&lt;/span&gt; make more sense too.&amp;nbsp;Bonus! &lt;/p&gt;
&lt;p&gt;I suddenly realized that great learning materials are crucial if I was going to keep momentum and keep on enjoying the thrill of seeing the computer do something I hadn&amp;#8217;t made it do&amp;nbsp;before.&lt;/p&gt;
&lt;p&gt;So now I&amp;#8217;m now working on &lt;a href="https://codeschoolmeta.com"&gt;Code School: Meta&lt;/a&gt;. It&amp;#8217;s an online community to make it easier to teach yourself how to code - less confusion about how to get started or what to learn next, more encouragement, and lots of high quality&amp;nbsp;resources. &lt;/p&gt;
&lt;p&gt;If you&amp;#8217;d like to know more, please &lt;a href="https://codeschoolmeta.com"&gt;check it out&lt;/a&gt; and sign up for&amp;nbsp;updates. &lt;/p&gt;</content><category term="Startups"></category><category term="learning"></category></entry></feed>