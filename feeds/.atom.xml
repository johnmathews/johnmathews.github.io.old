<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>John Mathews</title><link href="https://johnmathews.eu/" rel="alternate"/><link href="https://johnmathews.eu/feeds/.atom.xml" rel="self"/><id>https://johnmathews.eu/</id><updated>2021-06-22T14:30:07+02:00</updated><entry><title>Building my own site analytics</title><link href="https://johnmathews.eu/building-my-own-site-analytics.html" rel="alternate"/><published>2021-06-22T14:30:07+02:00</published><updated>2021-06-22T14:30:07+02:00</updated><author><name>John Mathews</name></author><id>tag:johnmathews.eu,2021-06-22:/building-my-own-site-analytics.html</id><summary type="html"/><content type="html">&lt;p&gt;I’ve built a simple website analytics feature for this site, you can see it at
&lt;a href="https://johnmathews.eu/analytics.html"&gt;/analytics&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Google Analytics felt like massive overkill, there was so many options and
metrics available that the few I wanted to look at were lost in the noise. Also
I’d like this site to load quickly, and &lt;span class="caps"&gt;GA&lt;/span&gt; makes a site slower.&lt;/p&gt;
&lt;p&gt;Then I tried CloudFlare Analytics, which was certainly more light-weight, but
I’m not sure the metrics are accurate. CloudFlare rounds metrics to the nearest
10, and uses a sampling method, which for my small site with very lite traffic
isn’t a great feature.&lt;/p&gt;
&lt;p&gt;I know from my work visualizing data and building dashboards that the metrics
presented will alter the users perception of the underlying reality. If I
present a particular metric as if its important, then it is very hard for a
regular user of the dashboard to not be influenced by this design, and consider
the metric as a Key Indicator. The way they think about their impact or the
underlying system (product quality, performance, growth, etc) would be directly
influenced by the design decisions I make. (Which metrics to show, and how
prominent they are). &lt;/p&gt;
&lt;p&gt;For this reason, I wanted to see fewer, not more, metrics. And I wanted to
arrange them myself. In Google Analytics it can be fun clicking around on all
the things and seeing lots of options, but its not really useful once the
novelty has worn off.&lt;/p&gt;
&lt;p&gt;The only things I’m really interested in from an analytics perspective are:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;How many people are reading my site&lt;/li&gt;
&lt;li&gt;What are they reading&lt;/li&gt;
&lt;li&gt;How much are they reading.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I’d like to be able to infer weather I have a few people who read a lot, or a lot of people
who read a little? (Or, as is the case, a few people who read a little.)&lt;/p&gt;
&lt;p&gt;I think that unique &lt;span class="caps"&gt;IP&lt;/span&gt; addresses is a good enough proxy for unique readers, even
though I’m not considering crawlers, bots, or &lt;span class="caps"&gt;RSS&lt;/span&gt; subscribers.&lt;/p&gt;
&lt;p&gt;The analytics “engine” works because each time a page is loaded a JavaScript
snippet sends a request to a “Cloud Function” on Google Cloud Platform. The
function parses the request to extract the current &lt;span class="caps"&gt;URL&lt;/span&gt; and the &lt;span class="caps"&gt;IP&lt;/span&gt; address. This
is then added to a DataStore database along with the current datetime. &lt;/p&gt;
&lt;p&gt;Viewing the analytics is as simple (and as complicated) as making a request to
the database, parsing the data and visualizing it conveniently. For example,
group the data by days and count the distinct &lt;span class="caps"&gt;IP&lt;/span&gt; Addresses to figure out how
many people are visiting each day.&lt;/p&gt;
&lt;p&gt;It’s not a perfect solution, there are edge cases I’m not considering. But its
mostly right and didn’t take much effort. The hardest part was figuring out
&lt;code&gt;chart.js&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Eventually I’ll want to group the metrics by week or month I expect, but it’s
fast and simple to edit the code, so I can iterate easily. It’ll be a good way of learning
and playing with cloud technologies and JavaScript. &lt;/p&gt;
&lt;h2 id="tasks-for-later"&gt;Tasks for later&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Make &lt;code&gt;/analytics.html&lt;/code&gt; load faster&lt;/li&gt;
&lt;li&gt;Add loading spinners&lt;/li&gt;
&lt;li&gt;Group data by weeks or months as well as day&lt;/li&gt;
&lt;li&gt;Identify bots and search engines&lt;/li&gt;
&lt;li&gt;Aggregate the data (once per day) in a Cloud Function instead of repeatedly in the browser.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="questions"&gt;Questions&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;I’d be interested to know if there is a way to track &lt;span class="caps"&gt;RSS&lt;/span&gt; subscribers (I know
    that usually server logs can be inspected for this, but my site is hosted on
    GitHub pages so I don’t think this is possible.)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a href="https://johnmathews.eu/analytics.html"&gt;&lt;strong&gt;Site Analytics&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;</content><category term="Technical/Web"/><category term="cloud-functions"/><category term="data"/></entry></feed>